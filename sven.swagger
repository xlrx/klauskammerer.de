{"swagger":"2.0","info":{"description":"Api Documentation","version":"1.0","title":"Api Documentation","termsOfService":"urn:tos","contact":{},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}},"host":"localhost:8080","basePath":"/","tags":[{"name":"cape-controller","description":"Cape Controller"},{"name":"basic-error-controller","description":"Basic Error Controller"}],"paths":{"/changeValue/{param}":{"get":{"tags":["cape-controller"],"summary":"changeValueOf","description":"Changes the value of an already saved attribute. The input should be like \"attributeID,newValue\"","operationId":"changeValueOfUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/createGraph/{param}":{"get":{"tags":["cape-controller"],"summary":"createGraph","description":"Creates either a single container and stores it or a whole graph of containers with their according types and stores them in hierarchic order, connected with the \"has\" edge. The input should be like \"(container1,type1),(container2,type2),...\"","operationId":"createGraphUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/deleteAll":{"get":{"tags":["cape-controller"],"summary":"resetDB","description":"Deletes all attributes and all containers from the database","operationId":"resetDBUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/deleteAllAttributes":{"get":{"tags":["cape-controller"],"summary":"deleteAllAttributes","description":"Deletes all attributes from the database","operationId":"deleteAllAttributesUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/deleteAllContainers":{"get":{"tags":["cape-controller"],"summary":"deleteAllContainers","description":"Deletes all containers from the database","operationId":"deleteAllContainersUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/error":{"get":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"head":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingHEAD","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}},"post":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingPOST","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"put":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingPUT","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"201":{"description":"Created"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}},"delete":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingDELETE","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}},"options":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingOPTIONS","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}},"patch":{"tags":["basic-error-controller"],"summary":"error","operationId":"errorUsingPATCH","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"object","additionalProperties":{"type":"object"}}},"204":{"description":"No Content"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"}}}},"/findAllAttributes":{"get":{"tags":["cape-controller"],"summary":"findAll","description":"Returns a list of all existing attributes with their name and value","operationId":"findAllUsingGET","consumes":["application/json"],"produces":["*/*"],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"type":"string"}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/newAttribute/{param}":{"get":{"tags":["cape-controller"],"summary":"storeAttribute","description":"Creates a single attribute with a name and a value and sets the ID automatically. The input should be like \"name,value\"","operationId":"storeAttributeUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/newContainer/{param}":{"get":{"tags":["cape-controller"],"summary":"storeContainer","description":"Creates a single container with a name and a type and sets the ID automatically. The input should be like \"name,type\"","operationId":"storeContainerUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/setContainerType/{param}":{"get":{"tags":["cape-controller"],"summary":"setContainerType","description":"Updates a container with a new ContainerType or adds it if there was no containerType found. The input should be like \"containerName,containerType\"","operationId":"setContainerTypeUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/setHas/{param}":{"get":{"tags":["cape-controller"],"summary":"setHasEdge","description":"Connects two containers with a \"has\" edge. The edges are saved inside the \"has-Set\" of each container. The input should be like \"container1,container2\"","operationId":"setHasEdgeUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}},"/setHasAttribute/{param}":{"get":{"tags":["cape-controller"],"summary":"setHasAttributeEdge","description":"Connects a container and an attribute with the \"hasAttribute\" edge. The edges are saved inside the \"hasAttribute-Set\" of each container. The input should be like \"containerName,attributeName\" (This works with IDs too)","operationId":"setHasAttributeEdgeUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"param","in":"path","description":"param","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"type":"string"}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden"},"404":{"description":"Not Found"}}}}},"definitions":{"ModelAndView":{"type":"object","properties":{"empty":{"type":"boolean"},"model":{"type":"object"},"modelMap":{"type":"object","additionalProperties":{"type":"object"}},"reference":{"type":"boolean"},"status":{"type":"string","enum":["100","101","102","103","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511"]},"view":{"$ref":"#/definitions/View"},"viewName":{"type":"string"}}},"View":{"type":"object","properties":{"contentType":{"type":"string"}}}}}